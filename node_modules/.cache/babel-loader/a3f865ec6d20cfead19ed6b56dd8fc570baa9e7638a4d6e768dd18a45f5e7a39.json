{"ast":null,"code":"import _initializerDefineProperty from \"/Users/user/Desktop/study/react-ts/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/Users/user/Desktop/study/react-ts/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/Users/user/Desktop/study/react-ts/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _jsxFileName = \"/Users/user/Desktop/study/react-ts/src/test/decorator.tsx\",\n  _class,\n  _descriptor,\n  _class3,\n  _init,\n  _class4;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propDecorator = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  console.log('args', args);\n};\n// 普通参数就是原型对象\nlet PrintCase1 = (_class = class PrintCase1 {\n  constructor() {\n    _initializerDefineProperty(this, \"title\", _descriptor, this);\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"title\", [propDecorator], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class); // 静态的话，就是构造函数\nlet PrintCase2 = (_class3 = (_class4 = class PrintCase2 {}, _class4.title = void 0, _class4), (_applyDecoratedDescriptor(_class3, \"title\", [propDecorator], (_init = Object.getOwnPropertyDescriptor(_class3, \"title\"), _init = _init ? _init.value : undefined, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  initializer: function () {\n    return _init;\n  }\n}), _class3)), _class3);\nfunction TestDecorator() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"TestDecorator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_c = TestDecorator;\nexport default TestDecorator;\nvar _c;\n$RefreshReg$(_c, \"TestDecorator\");","map":{"version":3,"names":["propDecorator","args","console","log","PrintCase1","PrintCase2","title","TestDecorator"],"sources":["/Users/user/Desktop/study/react-ts/src/test/decorator.tsx"],"sourcesContent":["const propDecorator: PropertyDecorator = (...args: any[])=>{\n  console.log('args', args);\n}\n// 普通参数就是原型对象\nclass PrintCase1{\n  @propDecorator\n  public title: string | undefined;\n}\n// 静态的话，就是构造函数\nclass PrintCase2{\n  @propDecorator\n  public static title: string | undefined;\n}\n\nfunction TestDecorator() {\n  return <div>TestDecorator</div>;\n}\n\nexport default TestDecorator;\n"],"mappings":";;;;;;;;;;AAAA,MAAMA,aAAgC,GAAG,YAAkB;EAAA,kCAAdC,IAAI;IAAJA,IAAI;EAAA;EAC/CC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;AAC3B,CAAC;AACD;AAAA,IACMG,UAAU,aAAhB,MAAMA,UAAU;EAAA;IAAA;EAAA;AAGhB,CAAC,uEAFEJ,aAAa;EAAA;EAAA;EAAA;EAAA;AAAA,cAGhB;AAAA,IACMK,UAAU,yBAAhB,MAAMA,UAAU,GAGf,UADeC,KAAK,mEADlBN,aAAa;EAAA;EAAA;EAAA;EAAA;IAAA;EAAA;AAAA;AAIhB,SAASO,aAAa,GAAG;EACvB,oBAAO;IAAA,UAAK;EAAa;IAAA;IAAA;IAAA;EAAA,QAAM;AACjC;AAAC,KAFQA,aAAa;AAItB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}